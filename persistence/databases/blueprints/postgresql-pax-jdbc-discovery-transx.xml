<?xml version="1.0"?>
<!--

     Copyright 2005-2018 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!--
        This Blueprint XML shows other _deployment_ method for data source configuration.
        With this method, we use pax-jdbc-config 1.3.0+, but without a need to use configuration admin factory PID
        We need:
         - mvn:org.postgresql/postgresql/42.2.2 bundle
         - jdbc feature (which includes pax-jdbc and pax-jdbc-config)
         - pax-jdbc-pool-transx feature

        This Blueprint XML can be directly dropped to ${karaf.home}/deploy or archived in typical /OSGI-INF/blueprint
        directory and installed as normal bundle.

        We configure database-specific (XA) data source directly as Blueprint bean
        (as it was recommended with Fuse 6.x) and specify some properties that'll make this data source eligible
        for "wrapping" by pax-jdbc-config (since 1.3.0).
    -->

    <!--
        Database-specific, non-pooling, non-enlisting javax.sql.XADataSource
    -->
    <bean id="postgresql" class="org.postgresql.xa.PGXADataSource">
        <property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />
        <property name="user" value="fuse" />
        <property name="password" value="fuse" />
        <property name="currentSchema" value="report" />
        <property name="connectTimeout" value="5" />
    </bean>

    <!--
        Expose database-specific data source with service properties
        No need to expose pooling, enlisting, non database-specific javax.sql.DataSource - it'll be registered
        automatically by pax-jdbc-config with the same properties as this <service>, but with higher service.ranking
    -->
    <service id="pool" ref="postgresql" interface="javax.sql.XADataSource">
        <service-properties>
            <!-- "pool" key is needed for pax-jdbc-config to wrap database-specific data source inside connection pool -->
            <entry key="pool" value="transx" />
            <!-- <service>/@id attribute doesn't propagate, but name of the datasource is required using one of: -->
            <entry key="osgi.jndi.service.name" value="jdbc/postgresql" />
            <!-- or: -->
            <!--<entry key="dataSourceName" value="jdbc/postgresql" />-->
            <!-- Other properties, that normally are needed by e.g., pax-jdbc-pool-transx -->
            <entry key="pool.maxPoolSize" value="13" />
            <entry key="pool.userName" value="fuse" />
            <entry key="pool.password" value="fuse" />
        </service-properties>
    </service>

</blueprint>
