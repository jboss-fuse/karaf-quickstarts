<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2018 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!-- define the context with /app4 path and keycloak-specific context/init properties -->

    <bean id="context" class="org.ops4j.pax.web.service.spi.context.DefaultServletContextHelper">
        <argument index="0" ref="blueprintBundle" />
    </bean>
    <service ref="context" interface="org.osgi.service.http.context.ServletContextHelper">
        <service-properties>
            <entry key="osgi.http.whiteboard.context.name" value="app4" />
            <entry key="osgi.http.whiteboard.context.path" value="/app4" />
            <entry key="context.init.keycloak.config.resolver" value="org.keycloak.adapters.osgi.PathBasedKeycloakConfigResolver" />
        </service-properties>
    </service>

    <!-- security configuration -->

    <bean id="security" class="org.jboss.fuse.quickstarts.security.keycloak.wb.SecurityConfigurationMapping" />
    <service ref="security" interface="org.ops4j.pax.web.service.whiteboard.SecurityConfigurationMapping" />

    <!--
        define servlets - they should be created (and registered) *after* registering login config by
        PaxWebIntegrationService - that's why depends-on is used
    -->

    <bean id="infoServlet" class="org.jboss.fuse.quickstarts.security.keycloak.wb.servlets.InfoServlet" />
    <bean id="logoutServlet" class="org.jboss.fuse.quickstarts.security.keycloak.wb.servlets.LogoutServlet" />

    <!--
        publish javax.servlet.Servlet services to be picked up by pax-web-extender-whiteboard
        pax-web-extender-whiteboard uses service registration properties
    -->

    <service ref="infoServlet" interface="javax.servlet.Servlet">
        <service-properties>
            <entry key="osgi.http.whiteboard.context.select" value="(osgi.http.whiteboard.context.name=app4)" />
            <entry key="osgi.http.whiteboard.servlet.name" value="info-servlet" />
            <entry key="osgi.http.whiteboard.servlet.pattern">
                <array value-type="java.lang.String">
                    <value>/info/*</value>
                </array>
            </entry>
        </service-properties>
    </service>
    <service ref="logoutServlet" interface="javax.servlet.Servlet">
        <service-properties>
            <entry key="osgi.http.whiteboard.context.select" value="(osgi.http.whiteboard.context.name=app4)" />
            <entry key="osgi.http.whiteboard.servlet.name" value="logout-servlet" />
            <entry key="osgi.http.whiteboard.servlet.pattern">
                <array value-type="java.lang.String">
                    <value>/logout</value>
                </array>
            </entry>
        </service-properties>
    </service>

</blueprint>
